# 字典 方式1：键名+冒号+空格+值
#name: "张三"
#age: 18
#data: {"address": "北京市海淀区中关村大街108号"}

# 字典方式2：直接为字典
#{"name":"张三", "age": 28}

# 字典练习： 字典嵌套字典
  # 需求，使用方式1
  # 实现 {"name":"张三","data":{"age":"18","address":{"data":28}},"test":"03"}
  #     {'name': '张三', 'data': {'age': 18, 'address': {'data': 28}}, 'test': '03'}
#name: "张三"
#data:
#  age: 18
#  address:
#    data: 28
#test: "03"
  # 友情提示：首先确保，需求的串为正确的字典
  # 练习2：{"data":{"1":{2:{"3":4}}}}
  # 口诀：值为字典时换行+缩进， 值不是字典直接空格+值
#data:
#  1:
#    2:
#      3: 4

# 以下 列表类型 格式：- 空格 值 示例：[1,2,3]
#- 1
#- 2
#- 3

# 列表嵌套 列表
# 需求：[1,[2,[4,[5,[9,0],8],6],3],7]
#      [1, [2, [4, [5, [9, 0], 8], 6], 3], 7]
# 口诀：有几个相同级别，几个杠（先数相同级别杠），值为字典或列表，空格换行+缩进；
#- 1
#-
#  - 2
#  -
#    - 4
#    -
#      - 5
#      -
#        - 9
#        - 0
#      - 8
#    - 6
#  - 3
#- 7

# 列表嵌套 字典
# 需求：[1,{1:[1,{A:C,D:{A:[9,P]}}]},5,M]
#      [1, {1: [1, {'A': 'C', 'D': {'A': [9, 'p']}}]}, 5, 'M']

#- 1
#-
#  1:
#    - 1
#    -
#      A: C
#      D:
#        A:
#          - 9
#          - p
#- 5
#- M

# 纯量 字符串，布尔值，整数，浮点数，Null，日期
# 字符串
#name: "张三"

# 布尔型 首字母大写
#flag: True
#布尔型 全部大写
#flag: TRUE
# 布尔型 全部小写
#flag: true
# 错误写法
#flag: tRue

# 整数
#age: 18
# 错误写法
#age: "18"

# 浮点数
#price: 12.8

# 空
# 错误写法
#data: None
# 正确写法
#data: null
#data: NULL
#data: Null
#data: ~
#data:

# 日期型
#date: 2019-02-03 11:11:11
#date: 2019-02-03 11:11:11.999

#data: 100.123456789123456789
#data: 1.123456789123456789
#data: 10.123456789123456789

# 锚点 {name:{username:"admin"},data:{"password":"123456"}}
name: &xm
  username: "admin"
  pwd: "23456"
data:
  password: "123456"
  <<: *xm